apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coder-xray-kube-role
  namespace: {{ .Values.namespace }}
rules:
- apiGroups: [""]
  resources: ["pods", "events"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets", "events"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name | quote }}
  annotations: {{ toYaml .Values.serviceAccount.annotations | nindent 4 }}
  labels: {{ toYaml .Values.serviceAccount.labels | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coder-xray-kube-rolebinding
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: coder-xray-kube-role
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name | quote }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coder-xray-kube
spec:
  # This must remain at 1 otherwise duplicate logs can occur!
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
      restartPolicy: Always
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: coder-xray-kube
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /coder-xray
            - scan
          env:
            - name: CODER_URL
              value: {{ .Values.coder.url }}
            - name: CODER_NAMESPACE
              value: {{  .Values.namespace | default .Release.Namespace }}
            - name: CODER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.coder.secretName }}
                  key: coder-token
            {{- if .Values.image.sslCertFile }}
            - name: SSL_CERT_FILE
              value: {{ .Values.image.sslCertFile }}
            {{- end }}
            {{- if .Values.image.sslCertDir }}
            - name: SSL_CERT_DIR
              value: {{ .Values.image.sslCertDir }}
            {{- end }}
            - name: CODER_ARTIFACTORY_URL
              value: {{ .Values.artifactory.url }}
            - name: CODER_ARTIFACTORY_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.artifactory.secretName }}
                  key: user
            - name: CODER_ARTIFACTORY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.artifactory.secretName }}
                  key: token
          {{- if .Values.volumeMounts }}
          volumeMounts: {{- toYaml .Values.volumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes: {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
